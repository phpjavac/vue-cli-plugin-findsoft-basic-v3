{"version":3,"sources":["webpack:///./src/components/EllipsisFun.vue","webpack:///./src/components/EllipsisFun.vue?a68d","webpack:///./src/components/EllipsisFun.vue?4369","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/core-js/internals/inherit-if-required.js","webpack:///./node_modules/ant-design-vue/es/tooltip/style/index.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js"],"names":["class","title","text","showText","components","aTooltip","props","type","String","default","defalut","limitLineNumber","Number","lineHeight","isLineLimit","Boolean","isCharLimit","maxLength","setup","ellipsis","lengthLimit","length","substr","lineLimit","res","getShowText","value","console","log","render","__scopeId","module","exports","requireObjectCoercible","whitespaces","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","replace","start","end","trim","isObject","setPrototypeOf","dummy","Wrapper","NewTarget","NewTargetPrototype","constructor","prototype","DESCRIPTORS","global","isForced","redefine","has","classof","inheritIfRequired","toPrimitive","fails","create","getOwnPropertyNames","f","getOwnPropertyDescriptor","defineProperty","NUMBER","NativeNumber","NumberPrototype","BROKEN_CLASSOF","toNumber","argument","first","third","radix","maxCode","digits","index","code","it","charCodeAt","NaN","slice","parseInt","key","NumberWrapper","arguments","this","valueOf","call","keys","split","j"],"mappings":"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","file":"js/chunk-64c1c939.963b43e4.js","sourcesContent":["<a-tooltip :title=\"text\"><span class=\"ellipsis\">{{showText}}</span></a-tooltip>","\r\nimport { defineComponent, onMounted, ref } from 'vue';\r\nimport { Tooltip } from 'ant-design-vue';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    aTooltip: Tooltip,\r\n  },\r\n  props: {\r\n    /** 长文本 */\r\n    text: {\r\n      type: String,\r\n      default: '',\r\n    },\r\n    /** 超出时显示的内容 */\r\n    type: {\r\n      type: String,\r\n      defalut: '...',\r\n    },\r\n\r\n    /** 限制的行数 —— 行数*行高 与 容器对比 */\r\n    limitLineNumber: {\r\n      type: Number,\r\n      default: 1,\r\n    },\r\n    /** 行高 */\r\n    lineHeight: {\r\n      type: Number,\r\n      default: 18,\r\n    },\r\n    /** 是否通过 行数控制 */\r\n    isLineLimit: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n\r\n    /** 是否根据长度限制 */\r\n    isCharLimit: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    /** 长度 */\r\n    maxLength: {\r\n      type: Number,\r\n      default: 20,\r\n    },\r\n\r\n  },\r\n  setup(props) {\r\n    const ellipsis = ref(null);\r\n    const showText = ref(''); /** 组件上显示的文本 */\r\n\r\n    /** lengthLimit */\r\n    const lengthLimit = () => {\r\n      const { text, maxLength, type } = props;\r\n      if (text.length > maxLength) return text.substr(0, maxLength) + type;\r\n      return text;\r\n    };\r\n\r\n    /** lineLimit */\r\n    const lineLimit = () => {\r\n      const { text, lineHeight, limitLineNumber } = props;\r\n      const res = '';\r\n\r\n      return res;\r\n    };\r\n\r\n    const getShowText = () => {\r\n      const { isCharLimit, isLineLimit } = props;\r\n      let res = '';\r\n      if (isCharLimit) res = lengthLimit();\r\n      if (isLineLimit) res = lineLimit();\r\n      showText.value = res;\r\n    };\r\n\r\n    onMounted(() => {\r\n      console.log(ellipsis.value);\r\n      getShowText();\r\n    });\r\n\r\n    return {\r\n      ellipsis,\r\n      showText,\r\n    };\r\n  },\r\n});\r\n","import { render } from \"./EllipsisFun.vue?vue&type=template&id=cd7c0de2&scoped=true&lang=pug\"\nimport script from \"./EllipsisFun.vue?vue&type=script&lang=ts\"\nexport * from \"./EllipsisFun.vue?vue&type=script&lang=ts\"\nscript.render = render\nscript.__scopeId = \"data-v-cd7c0de2\"\n\nexport default script","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","var isObject = require('../internals/is-object');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\n\n// makes subclassing work correct for wrapped built-ins\nmodule.exports = function ($this, dummy, Wrapper) {\n  var NewTarget, NewTargetPrototype;\n  if (\n    // it can work only with native `setPrototypeOf`\n    setPrototypeOf &&\n    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this\n    typeof (NewTarget = dummy.constructor) == 'function' &&\n    NewTarget !== Wrapper &&\n    isObject(NewTargetPrototype = NewTarget.prototype) &&\n    NewTargetPrototype !== Wrapper.prototype\n  ) setPrototypeOf($this, NewTargetPrototype);\n  return $this;\n};\n","import '../../style/index.less';\nimport './index.less';","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar has = require('../internals/has');\nvar classof = require('../internals/classof-raw');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar create = require('../internals/object-create');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\n\n// Opera ~12 has broken Object#toString\nvar BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;\n\n// `ToNumber` abstract operation\n// https://tc39.github.io/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = it.charCodeAt(0);\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = it.slice(2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = digits.charCodeAt(index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.github.io/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var dummy = this;\n    return dummy instanceof NumberWrapper\n      // check on 1..constructor(foo) case\n      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)\n        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n"],"sourceRoot":""}